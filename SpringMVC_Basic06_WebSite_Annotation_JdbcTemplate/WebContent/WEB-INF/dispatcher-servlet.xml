<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context 
                           http://www.springframework.org/schema/context/spring-context.xsd">
<!--  
xml 파일
IOC 컨테이너에 적재될 bean 객체 생성과 injection (DI)

1. 필용한 controller 생성하고 bean 객체 생성 , injection
2. 현재 >> 하나의 클래스가 method 단위로 요청을 처리하는 것은 조금 뒤에 ...(최종적으론 하나의 컨트롤러가 여러개의 메소드를 처리할거예요)
   현재 controller 하나당 요청 하나를 처리 ....
   결과 : 하나의 클래스가 method 단위로 요청을 처리
   
 controller 요청당 한개
   요청 : 게시판 목록보기 (행위 업무)
              게시판 글쓰기
              게시판 글 수정하기
          
  localhost:8090/website/customer/notice.htm
  
  
  ** 추가작업 (SpringMVC_Basic06_WebSite_Annotation_JdbcTemplate)
  MemberDao 인터페이스 >> 구현 >> NewMemberDao >> 빈객체 생성
  NoticeDao 인터페이스 >> 구현 >> NoticeDao    >> 빈객체 생성
  
  context:component-scan 엘리먼트 사용 
  + 클래스 상단에  @Component(최상위개념) / @Repository(dao) / @Service(업무) / @Controller(요청처리) / @RestController(비동기요청처리) 인 
   = > 클래스는 자동으로 빈 객체가 생성
   
   
   ex. 
   @Repository 
   class NewMemberDao{}
   
   + xml에서 <context:component-scan base-package="dao" />
      = > 아래 코드처럼 빈객체를 생성할 필요없음. 
  
-->	
	
	<context:annotation-config></context:annotation-config>
	<context:component-scan base-package="ncontroller" />
	
	<!-- 모든 컨트롤러가 공통 사용 DAO 빈 객체  참조-->
    <!--<bean class="ncontroller.CustomerController"></bean> 위에서 component-scan 써서 작업을 없애버림-->	 


	<!-- 게시판을 구현 -->
	<bean id="newNoticeDao" class="dao.NewNoticeDao"></bean>
	
	
	<!-- 회원 구현 -->
	<bean id="newMemberDao" class="dao.NewMemberDao"></bean>
	
</beans> 


