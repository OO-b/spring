Spring 통해서 (객체의 생성 과 조립(injection))
 
	1. xml 설정을 통해서 (bean 생성 , injection)             - 해석이 편함  (2~3년전 방식. 유지보수를 위해 알아야함)
	2. xml 문서 없이도 지금과 같은 동일 작업 가능                                   - 각 페이지를 다 뒤져서 봐야함 (ex. autowired, Resource..)  - bean객체, injection할거예요.
   		>> xml 파일 (x)
  		>> 자바코드 이용해서 설정 작업(JAVA 파일 + Annotation)    

	3. 기존 xml :
		new GenericXmlApplicationContext("classpath:DI_Annotation_04/DI_Annotation_04.xml");

	      현재 java :    
		new AnnotationConfigApplicationContext(ConfigContext.class);   

			- ConfigContext.class가 xml을 대체
			- bean을 만들고, injection하는 것들이 들어 있음 (annotation기법으로)

	사용 어노테이션은
		1.  @Configuration :해당 클래스가 [스프링의 설정]으로 사용됨을 지정 (xml을 대체 할 거야)
  		 ex)
  		 @Configuration
   	 	 public class configcontext {}

		2.  @Bean
   		 ex)
    	@Configuration
   	 	public class configcontext {
      
       @Bean  // 함수가 하는 역할 : 객체를 만들어 줌 
       public User user(){      //함수이름이 xml의 id값 
         return new User();     // return 타입이 class (즉, user 객체)
       }
       
       xml 에서 아래코드과 같은 형태를 위 코드처럼 함수(method) 의 형태로 설계 
       <bean id="user" class="DI.User">
    }
    
	result :
		> 어노테이션과 [메서드 이름]을 이용해서 스프링 컨테이너가 사용할 bean 객체 설정
		> 메서드가 리턴하는 객체를 bean객체로 사용하겠다

	class MemberRegisterService{/       /MemberRegisterService는  MemberDao에 의존한다. (나는 필요해 = 의존해,  그러면 주입시켜줘야함)
   		private MemberDao memberdao;
   		public MemberRegisterService(MemberDao memberdao){    // 밖에서 dao객체의 주소가 들어옴 
     	 this.memberdao = memberdao;
   }
   
   /* MemberRegisterService, MemberDao new해줘야함
       MemberRegisterService constructor에 MemberDao를 주입해줘야함 */
   
}

1. xml 설정
<bean id="memberRegSvc" class="MemberRegisterService">
  <constructor-arg  ref="memberdao">
</bean>
<bean id="memberdao" class="MemberDao" />
  
  
  ......   <constructor-arg  ref="memberdao"> (생성자 주입)를 빼면 자바 코드내에서 어떻게 실현할까?  
           @Autowired를 java내의 Constructor 위에 적고, xml에서 <context:annotation-config /> 사용 
  
  
   
1.1 추가 : @Autowired 적용
class MemberRegisterService{
   private MemberDao memberdao;
   
   @Autowired
   public MemberRegisterService(MemberDao memberdao){
      this.memberdao = memberdao;
   }
}   
 
xml 문서
<context:annotation-config />   
<bean id="memberRegSvc" class="MemberRegisterService"></bean>
<bean id="memberdao" class="MemberDao" />   
 
 
   
   
2. @Configuration  :  컴파일러가 스프링 컨테이너를 구성할 수 있는 환경설정 파일(like xml)로 인지함 
   @bean           : 너는 bean을 만드는 녀석이야.
     두개의 어노테이션을 이용해서 (java 코드 기반의 작업)
   
   @Configuration  
   class Configcontext{
         
         @bean
         public MemberRegisterService memberRegSvc(){
           return new MemberRegisterService(memberdao()); //함수를 통한 주입   .. 객체를 만들때 생성자에 밑에서 만든 Dao(주소값) Bean객체를 주입 
         } 
         
         @bean
         public MemberDao memberdao(){
          return new MemberDao();
         }
   }
   
-------------------------------------------------------------
옵션 :
<bean id="m" class="board"></bean>

=> 자바코드
@bean
public board m(){
  return new board();
}

옵션_1
@bean(name="hello")     //만들어 지는 bean의 이름을 m 또는  hello라고 할 수 있음
public board m(){
  return new board();
}



----------------------------------------
*
bean
configuration
Autowired  
Resource 같은타입많을땐 
